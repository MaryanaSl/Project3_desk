
Функция ПолучитьКоличествоЗаказов (ИдентификаторМП) Экспорт
	
	Попытка
		Узел = ПланыОбмена.ОбменСМобильнымПриложением.НайтиПоКоду(ИдентификаторМП);
	Исключение
		Результат = ОписаниеОшибки();
		ЗаписьЖурналаРегистрации("ПоискУзлаОбмена", УровеньЖурналаРегистрации.Ошибка,,,
			Результат);
	КонецПопытки;
	//ищем узел обмена
	
	//если не нашли создаем новый и регистрируем изменения
	Если Узел.Пустая() Тогда
		НовыйУзел = ПланыОбмена.ОбменСМобильнымПриложением.СоздатьУзел();
		НовыйУзел.Код = ИдентификаторМП;
		НовыйУзел.Наименование = ИдентификаторМП;
		НовыйУзел.Записать();
		Узел = НовыйУзел.Ссылка;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Доработка_Доставка.Ссылка КАК Ссылка,
	               |	Доработка_Доставка.Ответственный КАК Ответственный
	               |ИЗ
	               |	Документ.Доработка_Доставка КАК Доработка_Доставка
	               |ГДЕ
	               |	Доработка_Доставка.Ответственный = &Ответственный";
	
	Запрос.УстановитьПараметр("Ответственный",Справочники.Пользователи.НайтиПоНаименованию("Курьер"));
	
	Выборка = Запрос.Выполнить().Выбрать(); 
	//обходим выборку и записываем изменения
	Пока Выборка.Следующий() Цикл
		ПланыОбмена.ЗарегистрироватьИзменения(Узел, Выборка.Ссылка);  
	КонецЦикла;
	КонецЕсли;
	
	//если узел есть, то проверяем данные в узле для изменений
	
	//выбираем данные
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Доработка_ДоставкаИзменения.Ссылка.Ссылка КАК Ссылка,
	               |	Доработка_ДоставкаИзменения.Ссылка.Ответственный КАК Ответственный
	               |ИЗ
	               |	Документ.Доработка_Доставка.Изменения КАК Доработка_ДоставкаИзменения
	               |ГДЕ
	               |	Доработка_ДоставкаИзменения.Узел = &Узел
	               |	И Доработка_ДоставкаИзменения.Ссылка.Ответственный = &Ответственный";
	
	Запрос.УстановитьПараметр("Ответственный",Справочники.Пользователи.НайтиПоНаименованию("Курьер")); 
	Запрос.УстановитьПараметр("Узел",Узел);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	//если данных в узле нет - нет никаких изменений в плане доставок, то обратимся запросом 
	//к документам доставка и получим массив доставок с отборот по Курьеру
	Если РезультатЗапроса.Пустой() Тогда
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Доработка_Доставка.Ссылка КАК Ссылка,
	               |	Доработка_Доставка.Ответственный КАК Ответственный
	               |ИЗ
	               |	Документ.Доработка_Доставка КАК Доработка_Доставка
	               |ГДЕ
	               |	Доработка_Доставка.Ответственный = &Ответственный";
	
	Запрос.УстановитьПараметр("Ответственный",Справочники.Пользователи.НайтиПоНаименованию("Курьер"));
	Выборка = Запрос.Выполнить().Выбрать();
	МассивДоставокДляВыгрузки1 = Новый Массив;

	Пока Выборка.Следующий() Цикл
		ДоставкиПоОтветсвенному1 = Новый Структура;
		ДоставкиПоОтветсвенному1.Вставить("Ссылка", Строка(Выборка.Ссылка));
		ДоставкиПоОтветсвенному1.Вставить("Ответственный", Строка(Выборка.Ответственный));
		
		МассивДоставокДляВыгрузки1.Добавить(ДоставкиПоОтветсвенному1);
	КонецЦикла;
	
	ТелоОтвета = ЗаписатьЗначениеJSON(МассивДоставокДляВыгрузки1);
	Возврат ТелоОтвета;
	
	КонецЕсли;
	
	//обходим выборку если есть данные в плане обмена
	Выборка = РезультатЗапроса.Выбрать();  
	
	МассивДляОтменыРегистрации = Новый Массив;
    МассивДоставокДляВыгрузки = Новый Массив;
	
	Пока Выборка.Следующий() Цикл
		МассивДляОтменыРегистрации.Добавить (Выборка.Ссылка);  
		
		ДоставкиПоОтветсвенному = Новый Структура;
		ДоставкиПоОтветсвенному.Вставить("Ссылка", Строка(Выборка.Ссылка));
		ДоставкиПоОтветсвенному.Вставить("Ответственный", Строка(Выборка.Ответственный));
		
		МассивДоставокДляВыгрузки.Добавить(ДоставкиПоОтветсвенному);
		
	КонецЦикла;  
		//создаем пакет данных
	ТелоОтвета = ЗаписатьЗначениеJSON(МассивДоставокДляВыгрузки);
	
	// отменяем регистрацию
	ПланыОбмена.УдалитьРегистрациюИзменений(Узел, МассивДляОтменыРегистрации); 
	Возврат ТелоОтвета;
	
КонецФункции  

Функция ПолучитьЗаказы (ИдентификаторМобильного) Экспорт
	
	//ищем узел обмена
	Попытка 
		
	Узел = ПланыОбмена.ОбменСМобильнымПриложением.НайтиПоКоду(ИдентификаторМобильного); 
	
	//если не нашли создаем новый и регистрируем изменения
	Если Не ЗначениеЗаполнено(Узел) Тогда
		УзелОбъект = ПланыОбмена.ОбменСМобильнымПриложением.СоздатьУзел();
		УзелОбъект.Код = ИдентификаторМобильного;
		УзелОбъект.Наименование = ИдентификаторМобильного;
		УзелОбъект.Пользователь = Пользователи.ТекущийПользователь();
		УзелОбъект.Записать();		
		Узел = УзелОбъект.Ссылка;
		
		ВыполнитьПервичнуюРегистрацию(Узел);
	КонецЕсли;
	
	ТекущийУзел = ПланыОбмена.ОбменСМобильнымПриложением.ЭтотУзел();
	
	Если Не ЗначениеЗаполнено(ТекущийУзел.Код) Тогда
		УзелОбъект = ТекущийУзел.ПолучитьОбъект();
		УзелОбъект.Код = "main";
		УзелОбъект.Наименование = "Центральный узел";
		УзелОбъект.Записать();
	КонецЕсли;
	
	// Получение зарегистрированных данных
	//выбираем данные
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Доработка_ДоставкаИзменения.Ссылка.Ссылка КАК Ссылка,
	               |	Доработка_ДоставкаИзменения.Ссылка.Ответственный КАК Ответственный,
	               |	Доработка_ДоставкаИзменения.Ссылка.ПометкаУдаления КАК ПометкаУдаления,
	               |	Доработка_ДоставкаИзменения.Ссылка.Номер КАК Номер,
	               |	Доработка_ДоставкаИзменения.Ссылка.Дата КАК Дата,
	               |	Доработка_ДоставкаИзменения.Ссылка.Проведен КАК Проведен,
	               |	Доработка_ДоставкаИзменения.Ссылка.Организация КАК Организация,
	               |	Доработка_ДоставкаИзменения.Ссылка.Контрагент КАК Контрагент,
	               |	Доработка_ДоставкаИзменения.Ссылка.Договор КАК Договор,
	               |	Доработка_ДоставкаИзменения.Ссылка.АдресДоставки КАК АдресДоставки,
	               |	Доработка_ДоставкаИзменения.Ссылка.Основание КАК Основание,
	               |	Доработка_ДоставкаИзменения.Ссылка.Комментарий КАК Комментарий,
	               |	Доработка_ДоставкаИзменения.Ссылка.Статус КАК Статус,
	               |	Доработка_ДоставкаИзменения.Ссылка.Фото КАК СсылкаФото
	               |ИЗ
	               |	Документ.Доработка_Доставка.Изменения КАК Доработка_ДоставкаИзменения
	               |ГДЕ
	               |	Доработка_ДоставкаИзменения.Узел = &Узел
	               |	И Доработка_ДоставкаИзменения.Ссылка.Ответственный = &Ответственный";
	
	Запрос.УстановитьПараметр("Ответственный",Пользователи.ТекущийПользователь()); 
	Запрос.УстановитьПараметр("Узел",Узел);
	
	РезультатЗапроса = Запрос.Выполнить();
    Выборка = РезультатЗапроса.Выбрать();
	// Сериализация зарегистрированных данных
	МассивДоставокДляВыгрузки = Новый Массив;
    МассивДляОтменыРегистрации = Новый Массив;
	
	Пока Выборка.Следующий() Цикл   
		МассивДляОтменыРегистрации.Добавить(Выборка.Ссылка);
		ДоставкиПоОтветственному = Новый Структура;
		ДоставкиПоОтветственному.Вставить("Ссылка", Строка(Выборка.Ссылка.УникальныйИдентификатор));
		ДоставкиПоОтветственному.Вставить("Ответственный", Строка(Выборка.Ответственный));
		ДоставкиПоОтветственному.Вставить("ПометкаУдаления", Выборка.ПометкаУдаления);
		ДоставкиПоОтветственному.Вставить("Номер", Выборка.Номер);
		//ДоставкиПоОтветственному.Вставить("Дата", Выборка.Дата);
		ДоставкиПоОтветственному.Вставить("Проведен", Выборка.Проведен);
		ДоставкиПоОтветственному.Вставить("Организация", Строка(Выборка.Организация));
		ДоставкиПоОтветственному.Вставить("Контрагент", Строка(Выборка.Контрагент));
		ДоставкиПоОтветственному.Вставить("Договор", Строка(Выборка.Договор));
		ДоставкиПоОтветственному.Вставить("АдресДоставки", Выборка.АдресДоставки);
		ДоставкиПоОтветственному.Вставить("Основание", Строка(Выборка.Основание));
		ДоставкиПоОтветственному.Вставить("Комментарий", Выборка.Комментарий);
		ДоставкиПоОтветственному.Вставить("Статус", XMLСтрока(Выборка.Статус));
		//ДоставкиПоОтветственному.Вставить("Фото", Base64Строка(Выборка.Фото.ПолучитьДвоичныеДанные));
		
		//Товары = Выборка.Товары.Выбрать();
		//
		//Пока Товары.Следующий() Цикл 
		//	ДоставкиПоОтветственномуТЧ = Новый Структура;
		//	ДоставкиПоОтветственномуТЧ.Вставить("Товары.НомерСтроки", Товары.НомерСтроки);
		//	ДоставкиПоОтветственномуТЧ.Вставить("Товары.Номенклатура", Строка(Товары.Номенклатура));
		//	ДоставкиПоОтветственномуТЧ.Вставить("Товары.Количество", Товары.Количество);
		//	
		//	МассивДоставокДляВыгрузки.Добавить(ДоставкиПоОтветственномуТЧ);
		//КонецЦикла; 
		
		МассивДоставокДляВыгрузки.Добавить(ДоставкиПоОтветственному);
	КонецЦикла;
	
    //создаем пакет данных
	ТелоОтвета = ЗаписатьЗначениеJSON(МассивДоставокДляВыгрузки);
	
	//отменяем регистрацию
	Если МассивДляОтменыРегистрации.Количество() > 0 Тогда
	ПланыОбмена.УдалитьРегистрациюИзменений(ТекущийУзел, МассивДляОтменыРегистрации);    
КонецЕсли;

	//Ответ = Новый HTTPСервисОтвет(200);
	//Ответ.УстановитьТелоИзСтроки(ТелоОтвета);
	
Исключение
    ЗаписьЖурналаРегистрации("exchangeПолучитьСписокЗаказов", УровеньЖурналаРегистрации.Ошибка,,,ОписаниеОшибки());
	//Ответ.КодСостояния = 500;
	//Ответ.УстановитьТелоИзСтроки("Ошибка формирования пакета данных");
КонецПопытки;

	Возврат ТелоОтвета;
	
КонецФункции

  Процедура ВыполнитьПервичнуюРегистрацию(Узел) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Доработка_Доставка.Ссылка КАК Ссылка,
	               |	Доработка_Доставка.Ответственный КАК Ответственный
	               |ИЗ
	               |	Документ.Доработка_Доставка КАК Доработка_Доставка
	               |ГДЕ
	               |	Доработка_Доставка.Ответственный = &Ответственный";
	
	Запрос.УстановитьПараметр("Ответственный", Пользователи.ТекущийПользователь());
	Выборка = Запрос.Выполнить().Выбрать();
	ДанныеКРегистрации = Новый Массив;
	
	//обходим выборку и записываем изменения
	Пока Выборка.Следующий() Цикл
		ДанныеКРегистрации.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	ПланыОбмена.ЗарегистрироватьИзменения(Узел, ДанныеКРегистрации); 	
	
КонецПроцедуры
