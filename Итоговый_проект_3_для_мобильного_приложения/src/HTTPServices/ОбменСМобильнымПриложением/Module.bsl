
Функция pingПроверитьПодключение(Запрос)
	
	Ответ = Новый HTTPСервисОтвет(200);
	
	Ответ.УстановитьТелоИзСтроки("OK");
	Возврат Ответ;  
	
КонецФункции

Функция exchangeПолучитьКоличествоЗаказов(Запрос)
	
	Ответ = Новый HTTPСервисОтвет(200); 
	
	Заголовки = Запрос.Заголовки;
	ИдентификаторМП = Заголовки.Получить ("X_Mobile_ID"); 
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Доработка_Доставка.Ссылка КАК Ссылка,
	               |	Доработка_Доставка.Ответственный КАК Ответственный
	               |ИЗ
	               |	Документ.Доработка_Доставка КАК Доработка_Доставка
	               |ГДЕ
	               |	Доработка_Доставка.Ответственный = &Ответственный";
	
	Запрос.УстановитьПараметр("Ответственный",Справочники.Пользователи.НайтиПоНаименованию("Курьер"));
	Выборка = Запрос.Выполнить().Выбрать();
	МассивДоставокДляВыгрузки = Новый Массив;

	Пока Выборка.Следующий() Цикл
		ДоставкиПоОтветсвенному = Новый Структура;
		ДоставкиПоОтветсвенному.Вставить("Ссылка", Строка(Выборка.Ссылка));
		ДоставкиПоОтветсвенному.Вставить("Ответственный", Строка(Выборка.Ответственный));
		МассивДоставокДляВыгрузки.Добавить(ДоставкиПоОтветсвенному);
	КонецЦикла;
	
	ТелоОтвета = ЗаписатьЗначениеJSON(МассивДоставокДляВыгрузки);
	Ответ.УстановитьТелоИзСтроки(ТелоОтвета);
	
	Возврат Ответ;  
	
КонецФункции


Функция exchangeПолучитьСписокЗаказов(Запрос)
	
	УстановитьПривилегированныйРежим(Истина);
	
	//инициализировать необходимые узлы планов обмена и выполнять первичную регистрацию объектов — 
	//документов «Доставка», в которых реквизит «Ответственный» соответствует текущему пользователю;
	ИдентификаторМобильного = Запрос.Заголовки.Получить("X_Mobile_ID");
	
	Попытка 
		
	//ищем узел обмена
	Узел = ПланыОбмена.ОбменСМобильнымПриложением.НайтиПоКоду(ИдентификаторМобильного); 
	
	//если не нашли создаем новый и регистрируем изменения
	СоздатьНовыйУзелИВыполнитьПервичнуюРегистрацию(ИдентификаторМобильного, Узел);
	
	ТекущийУзел = ПланыОбмена.ОбменСМобильнымПриложением.ЭтотУзел();
	
	//если текущего узла нет, то создать Центральный узел
	СоздатьЦентральныйУзел(ТекущийУзел);
	
	//если узел есть, то проверяем данные в узле для изменений
	// Получение зарегистрированных данных
    МассивДоставокДляВыгрузки = ПолучитьИзмененныеДанные(Узел);

    //создаем пакет данных
	ТелоОтвета = ЗаписатьЗначениеJSON(МассивДоставокДляВыгрузки);

	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.УстановитьТелоИзСтроки(ТелоОтвета);
	
	Возврат Ответ;   

	Исключение 
	
    ЗаписьЖурналаРегистрации("exchangeПолучитьСписокЗаказов", УровеньЖурналаРегистрации.Ошибка,,,ОписаниеОшибки());

	КонецПопытки;     

КонецФункции

Функция ПолучитьИзмененныеДанные(Узел)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
				|	Доработка_ДоставкаИзменения.Ссылка.Ссылка КАК Ссылка,
				|	Доработка_ДоставкаИзменения.Ссылка.Ответственный КАК Ответственный,
				|	Доработка_ДоставкаИзменения.Ссылка.ПометкаУдаления КАК ПометкаУдаления,
				|	Доработка_ДоставкаИзменения.Ссылка.Номер КАК Номер,
				|	Доработка_ДоставкаИзменения.Ссылка.Дата КАК Дата,
				|	Доработка_ДоставкаИзменения.Ссылка.Проведен КАК Проведен,
				|	Доработка_ДоставкаИзменения.Ссылка.Контрагент КАК Контрагент,
				|	Доработка_ДоставкаИзменения.Ссылка.АдресДоставки КАК АдресДоставки,
				|	Доработка_ДоставкаИзменения.Ссылка.Комментарий КАК Комментарий,
				|	Доработка_ДоставкаИзменения.Ссылка.Статус КАК Статус, 
				|	Доработка_ДоставкаИзменения.Ссылка.Контрагент.Код КАК КонтрагентКод,
				|	Доработка_ДоставкаИзменения.Ссылка.Контрагент.Родитель КАК КонтрагентРодитель,
				|	Доработка_ДоставкаИзменения.Ссылка.Контрагент.ЭтоГруппа КАК КонтрагентЭтоГруппа,
				|	Доработка_ДоставкаИзменения.Ссылка.Фото КАК Фото,
				|	Доработка_ДоставкаИзменения.Ссылка.Товары.(
				|		Ссылка КАК СсылкаСсылка,
				|		НомерСтроки КАК НомерСтроки,
				|		Номенклатура КАК Номенклатура,
				|		Количество КАК Количество,
				|		Номенклатура.Код КАК НоменклатураКод,
				|		Номенклатура.Родитель КАК НоменклатураРодитель,
				|		Номенклатура.ЭтоГруппа КАК НоменклатураЭтоГруппа
				|	) КАК Товары,
				|	Доработка_ДоставкаИзменения.Ссылка.Контрагент.КонтактнаяИнформация.(
				|		НомерТелефона КАК КонтрагентНомерТелефона
				|	) КАК КонтрагентТелефон
				|ИЗ
				|	Документ.Доработка_Доставка.Изменения КАК Доработка_ДоставкаИзменения
				|ГДЕ
				|	Доработка_ДоставкаИзменения.Узел = &Узел
				|	И Доработка_ДоставкаИзменения.Ссылка.Ответственный = &Ответственный";
	
	Запрос.УстановитьПараметр("Ответственный",Пользователи.ТекущийПользователь()); 
	Запрос.УстановитьПараметр("Узел",Узел);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	//обходим выборку если есть данные в плане обмена
	Выборка = РезультатЗапроса.Выбрать();
	
	// Сериализация зарегистрированных данных
	МассивДоставокДляВыгрузки = Новый Массив;
	МассивДляОтменыРегистрации = Новый Массив;
	
	//обходим выборку если есть данные в плане обмена
	//для передачи в JSON спреобразовать в строку, число, булево
	Пока Выборка.Следующий() Цикл   
		МассивДляОтменыРегистрации.Добавить(Выборка.Ссылка);
		ДоставкиИзменения = Новый Структура;
		ДоставкиИзменения.Вставить("Ссылка", Строка(Выборка.Ссылка.УникальныйИдентификатор()));
		ДоставкиИзменения.Вставить("Ответственный", Строка(Выборка.Ответственный));
		ДоставкиИзменения.Вставить("ПометкаУдаления", Выборка.ПометкаУдаления);
		ДоставкиИзменения.Вставить("Номер", Строка (Выборка.Номер));
		ДоставкиИзменения.Вставить("Дата", Формат (Выборка.Дата, "ДФ=dd.MM.yyyy"));
		ДоставкиИзменения.Вставить("Проведен", Выборка.Проведен);
		ДоставкиИзменения.Вставить("Контрагент", Строка(Выборка.Контрагент.УникальныйИдентификатор()));
		ДоставкиИзменения.Вставить("КонтрагентРодитель", Строка(Выборка.КонтрагентРодитель.УникальныйИдентификатор()));
		ДоставкиИзменения.Вставить("КонтрагентЭтоГруппа", Выборка.КонтрагентЭтоГруппа); 
		ДоставкиИзменения.Вставить("КонтрагентКод", Выборка.КонтрагентКод); 
		ДоставкиИзменения.Вставить("КонтрагентНаименование", Строка(Выборка.Контрагент)); 
		
		//получаем табличную часть из Контаткной информации справочника Контрагенты, для получения телефона
		ВыборкаТелефонКонтрагента = Выборка.КонтрагентТелефон.Выгрузить();
		МассивТелефон = Новый Массив;
		Для Каждого Строка Из ВыборкаТелефонКонтрагента Цикл
			СтрокаТаблицы = Новый структура;
			СтрокаТаблицы.Вставить("КонтрагентНомерТелефона",Строка (Строка.КонтрагентНомерТелефона)); 
			МассивТелефон.Добавить(СтрокаТаблицы);
		КонецЦикла;
		
		ДоставкиИзменения.Вставить("КонтрагентНомерТелефона", МассивТелефон);
		ДоставкиИзменения.Вставить("АдресДоставки", Выборка.АдресДоставки);
		ДоставкиИзменения.Вставить("Комментарий", Выборка.Комментарий);
		ДоставкиИзменения.Вставить("Статус", XMLСтрока(Выборка.Статус));
		ДоставкиИзменения.Вставить("Фото", Base64Строка(Выборка.Фото.Получить()));
		
		//получаем табличную часть Товары
		ВыборкаТЧ = Выборка.Товары.Выгрузить();
		МассивТЧ = Новый Массив;
		
		Для Каждого Строка Из ВыборкаТЧ Цикл
			СтрокаТаблицы = Новый структура;
			СтрокаТаблицы.Вставить("Номенклатура",Строка (Строка.Номенклатура.УникальныйИдентификатор())); 
			СтрокаТаблицы.Вставить("НоменклатураНаименование",Строка (Строка.Номенклатура)); 
			СтрокаТаблицы.Вставить("НоменклатураРодитель",Строка (Строка.НоменклатураРодитель.УникальныйИдентификатор()));  
			СтрокаТаблицы.Вставить("НоменклатураЭтоГруппа",Строка.НоменклатураЭтоГруппа);  
			СтрокаТаблицы.Вставить("НоменклатураКод",Строка.НоменклатураКод);  
			СтрокаТаблицы.Вставить("Количество", Строка.Количество);
			МассивТЧ.Добавить(СтрокаТаблицы);
		КонецЦикла;
		
		ДоставкиИзменения.Вставить("ТабличнаяЧасть", МассивТЧ);
		
		МассивДоставокДляВыгрузки.Добавить(ДоставкиИзменения); 
		
	КонецЦикла;
	
	//отменяем регистрацию
	Если МассивДляОтменыРегистрации.Количество() > 0 Тогда
		ПланыОбмена.УдалитьРегистрациюИзменений(Узел, МассивДляОтменыРегистрации);    
	КонецЕсли;
	
	Возврат МассивДоставокДляВыгрузки;
	
КонецФункции

Процедура СоздатьЦентральныйУзел(ТекущийУзел)
	
	Если Не ЗначениеЗаполнено(ТекущийУзел.Код) Тогда
		УзелОбъект = ТекущийУзел.ПолучитьОбъект();
		УзелОбъект.Код = "main";
		УзелОбъект.Наименование = "Центральный узел";
		УзелОбъект.Записать();
	КонецЕсли;

КонецПроцедуры

Процедура СоздатьНовыйУзелИВыполнитьПервичнуюРегистрацию(ИдентификаторМобильного, Узел)
	
	Если Не ЗначениеЗаполнено(Узел) Тогда
		УзелОбъект = ПланыОбмена.ОбменСМобильнымПриложением.СоздатьУзел();
		УзелОбъект.Код = ИдентификаторМобильного;
		УзелОбъект.Наименование = ИдентификаторМобильного;
		УзелОбъект.Пользователь = Пользователи.ТекущийПользователь();
		УзелОбъект.Записать();		
		Узел = УзелОбъект.Ссылка;
		ВыполнитьПервичнуюРегистрацию(Узел);
	КонецЕсли;

КонецПроцедуры

Процедура ВыполнитьПервичнуюРегистрацию(Узел)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Доработка_Доставка.Ссылка КАК Ссылка,
	               |	Доработка_Доставка.Ответственный КАК Ответственный
	               |ИЗ
	               |	Документ.Доработка_Доставка КАК Доработка_Доставка
	               |ГДЕ
	               |	Доработка_Доставка.Ответственный = &Ответственный";
	
	Запрос.УстановитьПараметр("Ответственный", Пользователи.ТекущийПользователь());
	Выборка = Запрос.Выполнить().Выбрать();
	ДанныеКРегистрации = Новый Массив;
	
	//обходим выборку и записываем изменения
	Пока Выборка.Следующий() Цикл
		ДанныеКРегистрации.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	ПланыОбмена.ЗарегистрироватьИзменения(Узел, ДанныеКРегистрации); 
	
КонецПроцедуры

Функция exchangeDeliveryОтправитьФотоИСтатус(Запрос)
	
	Ответ = Новый HTTPСервисОтвет(200); 
	
	ТекстОтвета = Запрос.ПолучитьТелоКакСтроку();
	МассивДоставок = ПрочитатьЗначениеJSON(ТекстОтвета);
	
	Для Каждого Доставка Из МассивДоставок Цикл
		
		ИД = Новый УникальныйИдентификатор (Доставка.Ссылка);
		СсылкаДоставка = Документы.Доработка_Доставка.ПолучитьСсылку(ИД);
		ОбъектДоставка = СсылкаДоставка.ПолучитьОбъект();
		
		//обновляем параметры
		ОбъектДоставка.Комментарий =Доставка.Комментарий; 
		
		Если Доставка.Статус = "" Тогда
			ОбъектДоставка.Статус = "";
		Иначе
			ОбъектДоставка.Статус = Перечисления.СтатусыДоставок_Доработка [СтрЗаменить(Доставка.Статус, " ", "")]; 
		КонецЕсли;
		
		ДвДанныеФото = Base64Значение(Доставка.Фото);
		ОбъектДоставка.Фото = Новый ХранилищеЗначения(ДвДанныеФото); 
		ОбъектДоставка.Записать();
		
	КонецЦикла;
	
	Возврат Ответ; 
	
КонецФункции

